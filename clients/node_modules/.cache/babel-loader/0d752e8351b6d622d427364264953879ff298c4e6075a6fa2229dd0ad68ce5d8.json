{"ast":null,"code":"var _jsxFileName = \"E:\\\\inventory\\\\clients\\\\src\\\\pages\\\\Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Orders() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [newOrder, setNewOrder] = useState({\n    item: '',\n    quantity: '',\n    date: '',\n    status: 'Pending'\n  });\n\n  // Fetch orders\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/orders').then(res => setOrders(res.data)).catch(err => console.error(err));\n  }, []);\n\n  // Add a new order\n  const addOrder = () => {\n    axios.post('http://localhost:5000/api/orders', newOrder).then(res => {\n      setOrders([...orders, res.data]);\n      setNewOrder({\n        item: '',\n        quantity: '',\n        date: '',\n        status: 'Pending'\n      });\n    }).catch(err => console.error(err));\n  };\n\n  // Mark order as complete\n  const markComplete = id => {\n    axios.put(`http://localhost:5000/api/orders/${id}`, {\n      status: 'Completed'\n    }).then(res => {\n      const updatedOrders = orders.map(order => order._id === id ? {\n        ...order,\n        status: 'Completed'\n      } : order);\n      setOrders(updatedOrders);\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Item\",\n        value: newOrder.item,\n        onChange: e => setNewOrder({\n          ...newOrder,\n          item: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: newOrder.quantity,\n        onChange: e => setNewOrder({\n          ...newOrder,\n          quantity: +e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newOrder.date,\n        onChange: e => setNewOrder({\n          ...newOrder,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newOrder.status,\n        onChange: e => setNewOrder({\n          ...newOrder,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addOrder,\n        children: \"Add Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [order.item, \" - \", order.quantity, \" pcs - \", new Date(order.date).toLocaleDateString(), \" - \", order.status, order.status !== 'Completed' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markComplete(order._id),\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Mark as Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, order._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Orders, \"EVITzgMeU17tYEPnqX7gr5eLqVk=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Orders","_s","orders","setOrders","newOrder","setNewOrder","item","quantity","date","status","get","then","res","data","catch","err","console","error","addOrder","post","markComplete","id","put","updatedOrders","map","order","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","placeholder","value","onChange","e","target","type","onClick","Date","toLocaleDateString","marginLeft","_c","$RefreshReg$"],"sources":["E:/inventory/clients/src/pages/Orders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Orders() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [newOrder, setNewOrder] = useState({\r\n    item: '',\r\n    quantity: '',\r\n    date: '',\r\n    status: 'Pending'\r\n  });\r\n\r\n  // Fetch orders\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/orders')\r\n      .then(res => setOrders(res.data))\r\n      .catch(err => console.error(err));\r\n  }, []);\r\n\r\n  // Add a new order\r\n  const addOrder = () => {\r\n    axios.post('http://localhost:5000/api/orders', newOrder)\r\n      .then(res => {\r\n        setOrders([...orders, res.data]);\r\n        setNewOrder({ item: '', quantity: '', date: '', status: 'Pending' });\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  // Mark order as complete\r\n  const markComplete = (id) => {\r\n    axios.put(`http://localhost:5000/api/orders/${id}`, { status: 'Completed' })\r\n      .then(res => {\r\n        const updatedOrders = orders.map(order =>\r\n          order._id === id ? { ...order, status: 'Completed' } : order\r\n        );\r\n        setOrders(updatedOrders);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Orders</h2>\r\n\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <input\r\n          placeholder=\"Item\"\r\n          value={newOrder.item}\r\n          onChange={(e) => setNewOrder({ ...newOrder, item: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Quantity\"\r\n          value={newOrder.quantity}\r\n          onChange={(e) => setNewOrder({ ...newOrder, quantity: +e.target.value })}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={newOrder.date}\r\n          onChange={(e) => setNewOrder({ ...newOrder, date: e.target.value })}\r\n        />\r\n        <select\r\n          value={newOrder.status}\r\n          onChange={(e) => setNewOrder({ ...newOrder, status: e.target.value })}\r\n        >\r\n          <option value=\"Pending\">Pending</option>\r\n          <option value=\"Completed\">Completed</option>\r\n        </select>\r\n        <button onClick={addOrder}>Add Order</button>\r\n      </div>\r\n\r\n      <ul>\r\n        {orders.map(order => (\r\n          <li key={order._id}>\r\n            {order.item} - {order.quantity} pcs - {new Date(order.date).toLocaleDateString()} - {order.status}\r\n            {order.status !== 'Completed' && (\r\n              <button onClick={() => markComplete(order._id)} style={{ marginLeft: '10px' }}>\r\n                Mark as Complete\r\n              </button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}