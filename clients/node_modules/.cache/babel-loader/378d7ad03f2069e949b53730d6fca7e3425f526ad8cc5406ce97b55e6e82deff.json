{"ast":null,"code":"var _jsxFileName = \"E:\\\\inventory\\\\clients\\\\src\\\\pages\\\\Suppliers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Suppliers() {\n  _s();\n  const [suppliers, setSuppliers] = useState([]);\n  const [newSupplier, setNewSupplier] = useState({\n    name: '',\n    contact: ''\n  });\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/suppliers').then(res => setSuppliers(res.data));\n  }, []);\n  const addSupplier = () => {\n    axios.post('http://localhost:5000/api/suppliers', newSupplier).then(res => {\n      setSuppliers([...suppliers, res.data]);\n      setNewSupplier({\n        name: '',\n        contact: ''\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Suppliers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      value: newSupplier.name,\n      onChange: e => setNewSupplier({\n        ...newSupplier,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Contact\",\n      value: newSupplier.contact,\n      onChange: e => setNewSupplier({\n        ...newSupplier,\n        contact: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addSupplier,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suppliers.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [s.name, \" - \", s.contact]\n      }, s._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Suppliers, \"QE/EuIgzZRSC1WhYHSVns1KiAkA=\");\n_c = Suppliers;\nexport default Suppliers;\nvar _c;\n$RefreshReg$(_c, \"Suppliers\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Suppliers","_s","suppliers","setSuppliers","newSupplier","setNewSupplier","name","contact","get","then","res","data","addSupplier","post","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","s","_id","_c","$RefreshReg$"],"sources":["E:/inventory/clients/src/pages/Suppliers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Suppliers() {\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [newSupplier, setNewSupplier] = useState({ name: '', contact: '' });\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/suppliers').then(res => setSuppliers(res.data));\r\n  }, []);\r\n\r\n  const addSupplier = () => {\r\n    axios.post('http://localhost:5000/api/suppliers', newSupplier).then(res => {\r\n      setSuppliers([...suppliers, res.data]);\r\n      setNewSupplier({ name: '', contact: '' });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Suppliers</h2>\r\n      <input placeholder=\"Name\" value={newSupplier.name} onChange={e => setNewSupplier({ ...newSupplier, name: e.target.value })} />\r\n      <input placeholder=\"Contact\" value={newSupplier.contact} onChange={e => setNewSupplier({ ...newSupplier, contact: e.target.value })} />\r\n      <button onClick={addSupplier}>Add</button>\r\n      <ul>\r\n        {suppliers.map(s => (\r\n          <li key={s._id}>{s.name} - {s.contact}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Suppliers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC;IAAEU,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAEzEZ,SAAS,CAAC,MAAM;IACdE,KAAK,CAACW,GAAG,CAAC,qCAAqC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIP,YAAY,CAACO,GAAG,CAACC,IAAI,CAAC,CAAC;EACtF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBf,KAAK,CAACgB,IAAI,CAAC,qCAAqC,EAAET,WAAW,CAAC,CAACK,IAAI,CAACC,GAAG,IAAI;MACzEP,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEQ,GAAG,CAACC,IAAI,CAAC,CAAC;MACtCN,cAAc,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC;EAED,oBACER,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA;MAAOoB,WAAW,EAAC,MAAM;MAACC,KAAK,EAAEhB,WAAW,CAACE,IAAK;MAACe,QAAQ,EAAEC,CAAC,IAAIjB,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAEE,IAAI,EAAEgB,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9HnB,OAAA;MAAOoB,WAAW,EAAC,SAAS;MAACC,KAAK,EAAEhB,WAAW,CAACG,OAAQ;MAACc,QAAQ,EAAEC,CAAC,IAAIjB,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAEG,OAAO,EAAEe,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvInB,OAAA;MAAQyB,OAAO,EAAEZ,WAAY;MAAAE,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CnB,OAAA;MAAAe,QAAA,EACGZ,SAAS,CAACuB,GAAG,CAACC,CAAC,iBACd3B,OAAA;QAAAe,QAAA,GAAiBY,CAAC,CAACpB,IAAI,EAAC,KAAG,EAACoB,CAAC,CAACnB,OAAO;MAAA,GAA5BmB,CAAC,CAACC,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACjB,EAAA,CA5BQD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA8BlB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}